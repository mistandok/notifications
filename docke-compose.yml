version: '3'
services:
  postgres:
    image: postgres:14.4-alpine
    restart: always
    env_file: notify_service/.env
    volumes:
      - ./data:/var/lib/postgresql/data1
    depends_on:
      - service

  service:
    build: notify_service
    volumes:
      - static_volume:/opt/app/static
      - media_volume:/opt/app/media

    expose:
      - "8000"

  nginx:
    image: nginx:1.22-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
      - ./nginx/data:/data/:ro
      - static_volume:/opt/app/static
      - media_volume:/opt/app/media
    depends_on:
      - service
    ports:
      - "80:80"
  rabbit:
    image: rabbitmq:3.7-management
    env_file: notify_service/.env
  celery_worker:
    command: bash -c "while !</dev/tcp/service/8000; do sleep 1; done; celery -A config worker -l debug"
    build:
      context: notify_service
      dockerfile: Dockerfile-celery
    env_file: notify_service/.env
    depends_on:
      - service
  celery_beat:
    command: bash -c "while !</dev/tcp/service/8000; do sleep 1; done; celery -A config beat -l debug"
    build:
      context: notify_service
      dockerfile: Dockerfile-celery
    env_file: notify_service/.env
    depends_on:
      - service


volumes:
  static_volume:
  media_volume: