version: '3'

services:
  redis:
    image: redis:latest
    command: --port 6378
    expose:
      - "6378:6378"

  # Кластер MongoDB

  mongors1n1:
    container_name: mongors1n1
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    expose:
      - 27017
    volumes:
      - mongo_cluster_mongors1n1_db:/data/db
      - ./config/user_preferences_fastapi_project/mongodb_config:/scripts

  mongors1n2:
    container_name: mongors1n2
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    expose:
      - 27017
    volumes:
      - mongo_cluster_mongors1n2_db:/data/db
      - ./config/user_preferences_fastapi_project/mongodb_config:/scripts

  mongors1n3:
    container_name: mongors1n3
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    expose:
      - 27017
    volumes:
      - mongo_cluster_mongors1n3_db:/data/db
      - ./config/user_preferences_fastapi_project/mongodb_config:/scripts

  mongors2n1:
    container_name: mongors2n1
    image: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    expose:
      - 27017
    volumes:
      - mongo_cluster_mongors2n1_db:/data/db
      - ./config/user_preferences_fastapi_project/mongodb_config:/scripts

  mongors2n2:
    container_name: mongors2n2
    image: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    expose:
      - 27017
    volumes:
      - mongo_cluster_mongors2n2_db:/data/db
      - ./config/user_preferences_fastapi_project/mongodb_config:/scripts

  mongors2n3:
    container_name: mongors2n3
    image: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    expose:
      - 27017
    volumes:
      - mongo_cluster_mongors2n3_db:/data/db
      - ./config/user_preferences_fastapi_project/mongodb_config:/scripts

  mongocfg1:
    container_name: mongocfg1
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - 27017
    volumes:
      - mongo_cluster_mongocfg1_db:/data/db
      - ./config/user_preferences_fastapi_project/mongodb_config:/scripts

  mongocfg2:
    container_name: mongocfg2
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - 27017
    volumes:
      - mongo_cluster_mongocfg2_db:/data/db
      - ./config/user_preferences_fastapi_project/mongodb_config:/scripts

  mongocfg3:
    container_name: mongocfg3
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - 27017
    volumes:
      - mongo_cluster_mongocfg3_db:/data/db
      - ./config/user_preferences_fastapi_project/mongodb_config:/scripts

  mongos1:
    container_name: mongos1
    image: mongo
    depends_on:
      - mongocfg1
      - mongocfg2
    command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017 --bind_ip_all
    expose:
      - 27017
    volumes:
      - ./config/user_preferences_fastapi_project/mongodb_config:/scripts

  mongos2:
    container_name: mongos2
    image: mongo
    depends_on:
      - mongocfg1
      - mongocfg2
    command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017 --bind_ip_all
    expose:
      - "27017"
    volumes:
      - ./config/user_preferences_fastapi_project/mongodb_config:/scripts

  user-preferences:
    build:
      context: ../user-preferences
      dockerfile: Dockerfile
    restart: always
    env_file:
      - config/user_preferences_fastapi_project/.env.prod
    depends_on:
      - mongos1
      - mongos2
      - redis
    expose:
      - 8101

  auth_database:
    image: postgres:13.0
    restart: always
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./config/auth/.env.prod.db
    command: -p 6432
    expose:
      - 6432

  auth_service:
    image: mikhailkushnerev/auth-service:v3.0.5
    restart: always
    depends_on:
      - auth_database
      - auth_redis
      - refresh_auth_redis
    env_file:
      - ./config/auth/.env.prod
    expose:
      - 5100

  auth_redis:
    image: redis:latest
    restart: always
    command: --port 6381
    expose:
      - 6381
    env_file:
      - ./config/auth/.env.prod

  refresh_auth_redis:
    image: redis:latest
    restart: always
    command: --port 6380
    expose:
      - 6380
    env_file:
      - ./config/auth/.env.prod

  rate_limit_redis:
    image: redis:latest
    restart: always
    command: --port 6382
    expose:
      - 6382
    env_file:
      - ./config/auth/.env.prod

  service:
    build:
      context: ../notify_service
      dockerfile: Dockerfile
    env_file:
      - ./config/notify_service/.env.prod
    volumes:
      - static_volume:/opt/app/static
      - media_volume:/opt/app/media
    restart: always
    depends_on:
      - postgres
    expose:
      - 8000

  postgres:
    image: postgres:14.4-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./config/notify_service/.env.prod
    expose:
      - 5432

  rabbit:
    image: rabbitmq:3.7-management
    env_file: ./config/notify_service/.env.prod

  celery_worker:
    command: bash -c "while !</dev/tcp/service/8000; do sleep 1; done; celery -A config worker -l debug"
    build:
      context: ../notify_service
      dockerfile: Dockerfile-celery
    env_file: ./config/notify_service/.env.prod
    depends_on:
      - service

  celery_beat:
    command: bash -c "while !</dev/tcp/service/8000; do sleep 1; done; celery -A config beat -l debug"
    build:
      context: ../notify_service
      dockerfile: Dockerfile-celery
    env_file: ./config/notify_service/.env.prod
    depends_on:
      - service

  nginx:
    image: nginx:latest
    volumes:
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./etc/nginx/configs:/etc/nginx/conf.d:ro
      - static_volume:/opt/app/static
      - media_volume:/opt/app/media
    environment:
      NGINX_SET_REAL_IPS_FROM: "[\"192.168.1.0/24\"]"
    depends_on:
      - user-preferences
      - service
    ports:
      - 80:80

volumes:
  mongo_cluster_mongors1n1_db:
  mongo_cluster_mongors1n2_db:
  mongo_cluster_mongors1n3_db:

  mongo_cluster_mongors2n1_db:
  mongo_cluster_mongors2n2_db:
  mongo_cluster_mongors2n3_db:

  mongo_cluster_mongocfg1_db:
  mongo_cluster_mongocfg2_db:
  mongo_cluster_mongocfg3_db:

  static_volume:
  media_volume:

  auth_postgres_data:
  postgres_data: